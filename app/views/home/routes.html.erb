<h1>Generate Routes</h1>

<script src="//maps.google.com/maps/api/js?key=AIzaSyCygZLXsbFpwW3-PoYfcofQw_v0LD-FjLA"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->

<div style='width: 800px;'>
  <div id="directions" style='width: 800px; height: 400px;'></div>
</div>
<div>
  <%= link_to "Get Orders", root_path%>
  <%= link_to "Generate Routes", root_path%>
</div>

<% @optimizeed_routes.each do |route| %>
  <p><%=route['address']['location_id'] %></p>
<% end %>

<script type="text/javascript">
  var orders = <%=raw @optimizeed_routes.to_json %>
  var directionsDisplay = new google.maps.DirectionsRenderer();
  var directionsService = new google.maps.DirectionsService();

  function calcRoute() {
    var origin  = orders[0]
    var destination = orders[orders.length-1]

    origin      = new google.maps.LatLng(origin['address']['lat'], origin['address']['lon']);
    destination = new google.maps.LatLng(destination['address']['lat'], destination['address']['lon']);


    var waypoints   = []
    for (i = 0; i < 22; i++) {

      waypoints.push(
        {
          location: new google.maps.LatLng(orders[i]['address']['lat'],orders[i]['address']['lon']),
          stopover: true
        }
      )

    }
    var request = {
        origin:       origin,
        destination:  destination,
        waypoints:    waypoints,
        travelMode:   google.maps.TravelMode.DRIVING
    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
      }
    });
  }

  calcRoute();

  var handler = Gmaps.build('Google');
  handler.buildMap({ internal: {id: 'directions'}}, function(){
    directionsDisplay.setMap(handler.getMap());
  });

  // handler = Gmaps.build('Google');
  // handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
  //   markers = handler.addMarkers(<%=raw @hash.to_json %>);
  //   handler.bounds.extendWith(markers);
  //   handler.fitMapToBounds();
  // });
</script>
